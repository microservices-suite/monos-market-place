
version: '3.8'

services:

  user: 
    build: 
      dockerfile: Dockerfile.dev 
      context: ../../../microservices/user
    container_name: user
    ports: 
      - "9001:9001" 
    volumes: 
      - /app/node_modules 
      - ../../../microservices/user:/app 

  payment: 
    build: 
      dockerfile: Dockerfile.dev 
      context: ../../../microservices/payment
    container_name: payment
    ports: 
      - "9002:9002" 
    volumes: 
      - /app/node_modules 
      - ../../../microservices/payment:/app 

  subscription: 
    build: 
      dockerfile: Dockerfile.dev 
      context: ../../../microservices/subscription
    container_name: subscription
    ports: 
      - "9003:9003" 
    volumes: 
      - /app/node_modules 
      - ../../../microservices/subscription:/app 

  product: 
    build: 
      dockerfile: Dockerfile.dev 
      context: ../../../microservices/product
    container_name: product
    ports: 
      - "9008:9008" 
    volumes: 
      - /app/node_modules 
      - ../../../microservices/product:/app 

  nginx:
    container_name: nginx
    depends_on:
      - user
      - payment
      - subscription
      - product
    restart: always
    build:
      context: ./nginx
      dockerfile: Dockerfile.dev
    ports:
      - '4000:80'
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:80/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  krakend:
    image: devopsfaith/krakend:${KRAKEND_VERSION}
    ports:
      - '8000:8000'
      - '8090:8090'
    container_name: krankend
    volumes:
      - ./telemetry/krakend/:/etc/krakend/
    command: ['run', '-d', '-c', '/etc/krakend/krakend.json']

  mongodb:
    image: mongo:${MONGODB_VERSION}
    ports:
      - '27017:27017'
    container_name: mongodb
    restart: always
    volumes:
      - type: bind
        source: ./data
        target: /data/db
  